{"version":3,"file":"static/js/500.dee0e4ed.chunk.js","mappings":"kRAEaA,E,QAAUC,GAAAA,KAAH,iM,6BCMPC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MAEd,OAAQZ,GACN,IAAK,OACHC,EAAQW,GACR,MAEF,IAAK,QACHT,EAASS,GACT,MAEF,IAAK,WACHP,EAAYO,GACZ,MAEF,QACE,OAEL,EAQKC,EAAQ,WACZZ,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAMD,OAJAS,EAAAA,EAAAA,YAAU,WACRjB,GAASkB,EAAAA,EAAAA,KACV,GAAE,CAAClB,KAGF,0BACE,UAACH,EAAD,CAASsB,SAlBQ,SAAAN,GACnBA,EAAMO,iBACNpB,GAASqB,EAAAA,EAAAA,IAAa,CAAElB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACrCS,GACD,EAcG,WACE,SAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,GAAI,CAAEC,WAAY,OAA1D,2BAGA,SAACC,EAAA,EAAD,CACEC,KAAK,OACLC,MAAM,OACN1B,KAAK,OACL2B,SAAUlB,EACVG,MAAOZ,EACP4B,KAAK,WAGP,SAACJ,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,QACN1B,KAAK,QACL2B,SAAUlB,EACVG,MAAOV,EACP0B,KAAK,WAGP,SAACJ,EAAA,EAAD,CACEC,KAAK,WACLC,MAAM,WACN1B,KAAK,WACL2B,SAAUlB,EACVG,MAAOR,EACPwB,KAAK,UAENtB,IAAS,SAACuB,EAAA,EAAD,CAAgBvB,OAAK,EAArB,gCAEV,0BACE,SAACwB,EAAA,EAAD,CAAQL,KAAK,SAASM,SAAS,WAAWX,QAAQ,mBAK3D,EClFD,EARqB,WACnB,OACE,+BACE,SAACxB,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormBox = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  gap: 20px;\n  width: 400px;\n  border: 2px solid #1976d2;\n  border-radius: 4px;\n  margin: 30px auto;\n`;\n","import { Button, FormHelperText, TextField, Typography } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authRegister } from 'redux/auth/authThunk';\nimport { FormBox } from './RegisterForm.styled';\nimport { resetErrorAction } from 'redux/auth/authSlice';\nimport { selectAuthError } from 'redux/auth/authSelectors';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(selectAuthError);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authRegister({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  useEffect(() => {\n    dispatch(resetErrorAction());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <FormBox onSubmit={handleSubmit}>\n        <Typography variant=\"h5\" component=\"h3\" sx={{ fontWeight: '700' }}>\n          Registration\n        </Typography>\n        <TextField\n          type=\"text\"\n          label=\"Name\"\n          name=\"name\"\n          onChange={handleChange}\n          value={name}\n          size=\"small\"\n        />\n\n        <TextField\n          type=\"email\"\n          label=\"Email\"\n          name=\"email\"\n          onChange={handleChange}\n          value={email}\n          size=\"small\"\n        />\n\n        <TextField\n          type=\"password\"\n          label=\"Password\"\n          name=\"password\"\n          onChange={handleChange}\n          value={password}\n          size=\"small\"\n        />\n        {error && <FormHelperText error>Invalid user data</FormHelperText>}\n\n        <div>\n          <Button type=\"submit\" children=\"Register\" variant=\"outlined\" />\n        </div>\n      </FormBox>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["FormBox","styled","RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","error","useSelector","selectAuthError","handleChange","event","target","value","reset","useEffect","resetErrorAction","onSubmit","preventDefault","authRegister","Typography","variant","component","sx","fontWeight","TextField","type","label","onChange","size","FormHelperText","Button","children"],"sourceRoot":""}